name: Create Build for Cryptography
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Build Cryptography Tag'
        required: true
        default: '43.0.1'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Tag
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a ${{ github.event.inputs.tag }} -m "Release Version ${{ github.event.inputs.tag }}" || echo "Tag already exists"
          git push origin ${{ github.event.inputs.tag }} || echo "Tag already exists"

      - name: Create Release
        run: |
          gh release create ${{ github.event.inputs.tag }} --notes "Release ${{ github.event.inputs.tag }}" || echo "Release already exists"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        manylinux: [ manylinux_2_28 ]
    env:
      CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y && yum install -y openssl-devel"
      CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: pyca/cryptography
          ref: ${{ github.event.inputs.tag }}
          fetch-depth: 0

      - name: Set up QEMU for multi-arch build
        uses: docker/setup-qemu-action@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux }}
          CIBW_MANYLINUX_AARCH64_IMAGE: ${{ matrix.manylinux }}
          CIBW_MANYLINUX_PPC64LE_IMAGE: ${{ matrix.manylinux }}
          CIBW_MANYLINUX_S390X_IMAGE: ${{ matrix.manylinux }}
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.11"
          CIBW_ARCHS_LINUX: x86_64 aarch64 ppc64le s390x
          CIBW_SKIP: "*musllinux* pp*"

      - name: Upload wheels
        run: |
          gh release upload ${{ github.event.inputs.tag }} wheelhouse/*.whl -R ${{ github.repository }} --clobber --latest=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}