on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Build Cryptography Tag'
        required: true
        default: '42.0.5'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Create Tag
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a v${{ github.event.inputs.tag }} -m "Release Version v${{ github.event.inputs.tag }}" || echo "Tag already exists"
          git push origin v${{ github.event.inputs.tag }} || echo "Tag already exists"

      - name: Create Release
        run: |
          gh release create v${{ github.event.inputs.tag }} --notes "Release v${{ github.event.inputs.tag }}" || echo "Release already exists"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        platform: [manylinux]
        arch: [x86_64, i686, aarch64, ppc64le, s390x]
        os: [ubuntu-latest]
        pyver: [cp311, cp312]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: pyca/cryptography
          ref: ${{ github.event.inputs.tag }}
          fetch-depth: 0

      - name: Set up QEMU for multi-arch build
        uses: docker/setup-qemu-action@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
          CIBW_MANYLINUX_PPC64LE_IMAGE: manylinux2014
          CIBW_BUILD: ${{matrix.pyver}}-${{matrix.platform}}_${{matrix.arch}}
          CIBW_ARCHS_LINUX: auto aarch64 ppc64le s390x

      - name: Upload wheels
        run: |
          gh release upload v${{ github.event.inputs.tag }} wheelhouse/*.whl